diff --git a/barrier b/barrier
deleted file mode 100755
index df28033..0000000
Binary files a/barrier and /dev/null differ
diff --git a/kernel/exec.c b/kernel/exec.c
index d1b0bfa..e4b8bc3 100644
--- a/kernel/exec.c
+++ b/kernel/exec.c
@@ -7,8 +7,68 @@
 #include "defs.h"
 #include "elf.h"
 
+
+
 static int loadseg(pde_t *, uint64, struct inode *, uint, uint);
 
+uint64 va;
+void vmprint(pagetable_t pgtbl,int dep)
+{
+  if(dep==2)
+  {
+    printf("page table: %p\n",pgtbl);
+    for(int i=0;i<512;i++)
+    {
+        pte_t pte = pgtbl[i];
+        if(pte & PTE_V) 
+        {
+          printf("||idx:%d pa: %p,flags:",i,PTE2PA(pte));
+          (pte & PTE_R)?(printf("r")):printf("-");
+          (pte & PTE_W)?(printf("w")):printf("-");
+          (pte & PTE_X)?(printf("x")):printf("-");
+          (pte & PTE_U)?(printf("u\n")):printf("-\n"); 
+          vmprint((pagetable_t)PTE2PA(pte),1);
+        }
+       
+    }
+  }
+  if(dep==1)
+  {
+    for(int i=0;i<512;i++)
+    {
+      pte_t pte = pgtbl[i];
+        if(pte & PTE_V)
+        {
+          printf("||  ||idx:%d pa: %p,flags:",i,PTE2PA(pte));
+          (pte & PTE_R)?(printf("r")):printf("-");
+          (pte & PTE_W)?(printf("w")):printf("-");
+          (pte & PTE_X)?(printf("x")):printf("-");
+          (pte & PTE_U)?(printf("u\n")):printf("-\n");
+          vmprint((pagetable_t)PTE2PA(pte),0);
+        }
+    } 
+  }
+  else if(dep==0)
+  {
+    for(int i=0;i<512;i++)
+    {
+      va = i << (12 + 9 * (2 - 1));
+      //pte_t pte = pgtbl[PX(dep,va)];
+      pte_t pte = pgtbl[i];
+       if(pte & PTE_V)
+        {
+          uint64 pa_with_offset = PTE2PA(pte) + (va & (PGSIZE-1));
+          printf("||  ||  ||idx:%d va: %p -> pa:%p,flags:",i,va,pa_with_offset);
+          (pte & PTE_R)?(printf("r")):printf("-");
+          (pte & PTE_W)?(printf("w")):printf("-");
+          (pte & PTE_X)?(printf("x")):printf("-");
+          (pte & PTE_U)?(printf("u\n")):printf("-\n");
+        }
+    }
+  }else return;
+  
+}
+
 int flags2perm(int flags)
 {
     int perm = 0;
@@ -127,7 +187,10 @@ exec(char *path, char **argv)
   p->trapframe->epc = elf.entry;  // initial program counter = main
   p->trapframe->sp = sp; // initial stack pointer
   proc_freepagetable(oldpagetable, oldsz);
-
+  if(p->pid==1)
+  {
+    vmprint(p->pagetable,2);
+  }
   return argc; // this ends up in a0, the first argument to main(argc, argv)
 
  bad:
diff --git a/kernel/memlayout.h b/kernel/memlayout.h
index 25c87ea..0a88102 100644
--- a/kernel/memlayout.h
+++ b/kernel/memlayout.h
@@ -65,4 +65,4 @@
 //   TRAPFRAME (p->trapframe, used by the trampoline)
 //   TRAMPOLINE (the same page as in the kernel)
 #define TRAPFRAME (TRAMPOLINE - PGSIZE)
-#define USYSCALL 0 //MODIFY HERE for LAB 4
+#define USYSCALL (TRAPFRAME - PGSIZE) //MODIFY HERE for LAB 4
diff --git a/kernel/proc.c b/kernel/proc.c
index d82ae65..f3831dd 100644
--- a/kernel/proc.c
+++ b/kernel/proc.c
@@ -131,6 +131,16 @@ found:
     release(&p->lock);
     return 0;
   }
+  
+
+  //创建一个usyscall页面
+  if((p->usys = (struct usyscall *)kalloc())==0)
+  {
+    freeproc(p);
+    release(&p->lock);
+    return 0;
+  }
+ p->usys->pid = p->pid;
 
   // An empty user page table.
   p->pagetable = proc_pagetable(p);
@@ -158,6 +168,9 @@ freeproc(struct proc *p)
   if(p->trapframe)
     kfree((void*)p->trapframe);
   p->trapframe = 0;
+  if(p->usys)
+    kfree((void*)p->usys);
+  p->usys = 0;
   if(p->pagetable)
     proc_freepagetable(p->pagetable, p->sz);
   p->pagetable = 0;
@@ -202,6 +215,15 @@ proc_pagetable(struct proc *p)
     return 0;
   }
 
+  //map USYSCALL page below the trapframe
+  if(mappages(pagetable, USYSCALL, PGSIZE,
+              (uint64)(p->usys), PTE_R | PTE_U) < 0){
+    uvmunmap(pagetable, TRAMPOLINE, 1, 0);
+    uvmunmap(pagetable, TRAPFRAME, 1,0);
+    uvmfree(pagetable, 0);
+    return 0;
+  }
+
   return pagetable;
 }
 
@@ -212,6 +234,7 @@ proc_freepagetable(pagetable_t pagetable, uint64 sz)
 {
   uvmunmap(pagetable, TRAMPOLINE, 1, 0);
   uvmunmap(pagetable, TRAPFRAME, 1, 0);
+  uvmunmap(pagetable, USYSCALL,1 ,0);
   uvmfree(pagetable, sz);
 }
 
diff --git a/kernel/proc.h b/kernel/proc.h
index 0ad05e9..e530379 100644
--- a/kernel/proc.h
+++ b/kernel/proc.h
@@ -110,4 +110,5 @@ struct proc {
   struct file *ofile[NOFILE];  // Open files
   struct inode *cwd;           // Current directory
   char name[16];               // Process name (debugging)
+  struct usyscall *usys;             //在proc中增加usyscall
 };
